{"version":3,"sources":["App.js","index.js"],"names":["App","textareaRef","useRef","useState","text","setText","chooseTag","setChooseTag","useEffect","current","focus","randomSelect","interval","setInterval","randomTag","pickRandomTag","setTimeout","clearInterval","times","Math","floor","random","split","length","className","ref","placeholder","id","onKeyUp","e","key","target","value","onChange","filter","tag","trim","map","idx","ReactDom","render","document","querySelector"],"mappings":"sMAuEeA,EApEH,WACX,IAAMC,EAAcC,iBAAO,MAC3B,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAkCF,mBAAS,MAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEAC,qBAAU,WACTP,EAAYQ,QAAQC,UAClB,IAEH,IAaMC,EAAe,WACpB,IAEMC,EAAWC,aAAY,WAC5B,IAAMC,EAAYC,IAElBR,EAAaO,KAEX,KAEHE,YAAW,WACVC,cAAcL,GAEdI,YAAW,WACV,IAAMF,EAAYC,IAElBR,EAAaO,KACX,OAEDI,MAGEH,EAAgB,WACrB,OAAOI,KAAKC,MAAMD,KAAKE,SAAWjB,EAAKkB,MAAM,KAAKC,SAInD,OACC,sBAAKC,UAAU,YAAf,UACC,qFACoD,uBADpD,kCAIA,0BAAUC,IAAKxB,EAAayB,YAAY,wBAAwBC,GAAG,WAAWC,QA1C3D,SAACC,GACP,UAAVA,EAAEC,MACLd,YAAW,WACVa,EAAEE,OAAOC,MAAQ,KACf,IACHrB,MAqCqGsB,SA9CnF,SAACJ,GACpBxB,EAAQwB,EAAEE,OAAOC,QA6C4GA,MAAO5B,IAEnI,qBAAKuB,GAAG,OAAR,SAEEvB,EAAKkB,MAAM,KACTY,QAAO,SAAAC,GAAG,MAAmB,KAAfA,EAAIC,UAClBC,KAAI,SAACF,EAAKG,GAAN,OAAc,sBAAgBd,UAAS,cAASlB,IAAcgC,EAAM,YAAc,IAApE,SAA2EH,EAAIC,QAApEE,YC7DpCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,W","file":"static/js/main.55aac771.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\n\nconst App = () => {\n\tconst textareaRef = useRef(null)\n\tconst [text, setText] = useState('')\n\tconst [chooseTag, setChooseTag] = useState(null)\n\n\tuseEffect(() => {\n\t\ttextareaRef.current.focus();\n\t}, [])\n\n\tconst textHandler = (e) => {\n\t\tsetText(e.target.value)\n\t}\n\n\tconst keyUpHandler = (e) => {\n\t\tif (e.key === 'Enter') {\n\t\t\tsetTimeout(() => {\n\t\t\t\te.target.value = ''\n\t\t\t}, 10)\n\t\t\trandomSelect();\n\t\t}\n\t}\n\n\tconst randomSelect = () => {\n\t\tconst times = 30;\n\n\t\tconst interval = setInterval(() => {\n\t\t\tconst randomTag = pickRandomTag();\n\n\t\t\tsetChooseTag(randomTag);\n\n\t\t}, 100);\n\n\t\tsetTimeout(() => {\n\t\t\tclearInterval(interval)\n\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst randomTag = pickRandomTag();\n\n\t\t\t\tsetChooseTag(randomTag);\n\t\t\t}, 100)\n\n\t\t}, times * 100)\n\t}\n\n\tconst pickRandomTag = () => {\n\t\treturn Math.floor(Math.random() * text.split(',').length)\n\t}\n\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<h3>\n\t\t\t\tEnter all of the choices divided by a comma (','). <br />\n\t\t\t\tPress enter when you're done\n\t\t\t</h3>\n\t\t\t<textarea ref={textareaRef} placeholder=\"Enter choices here...\" id=\"textarea\" onKeyUp={keyUpHandler} onChange={textHandler} value={text}></textarea>\n\n\t\t\t<div id=\"tags\">\n\t\t\t\t{\n\t\t\t\t\ttext.split(',')\n\t\t\t\t\t\t.filter(tag => tag.trim() !== '')\n\t\t\t\t\t\t.map((tag, idx) => <span key={idx} className={`tag ${chooseTag === idx ? \"highlight\" : \"\"}`}>{tag.trim()}</span>)\n\t\t\t\t}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import ReactDom from 'react-dom';\nimport App from './App';\n\nReactDom.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}