{"version":3,"sources":["App.js","index.js"],"names":["days","months","App","useState","hoursForClock","setHoursForClock","minutes","setMinutes","seconds","setSeconds","ampm","setAmPm","month","setMonth","day","setDay","date","setDate","darkmode","setDarkMode","minuteRef","useRef","secondRef","hourRef","useEffect","id","setInterval","time","Date","getMonth","getDay","getDate","hours","getHours","getMinutes","getSeconds","current","style","transform","scale","clearInterval","num","in_min","in_max","out_min","out_max","className","onClick","e","document","body","backgroundColor","color","ref","ReactDom","render","querySelector"],"mappings":"oLAGMA,EAAO,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAC1EC,EAAS,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OA2E9EC,EAxEH,WAEX,MAA0CC,mBAAS,MAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAA8BF,mBAAS,KAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,mBAAS,KAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwBN,mBAAS,MAAjC,mBAAOO,EAAP,KAAaC,EAAb,KACA,EAA0BR,mBAAS,KAAnC,mBAAOS,EAAP,KAAcC,EAAd,KACA,EAAsBV,mBAAS,KAA/B,mBAAOW,EAAP,KAAYC,EAAZ,KACA,EAAwBZ,mBAAS,KAAjC,mBAAOa,EAAP,KAAaC,EAAb,KACA,EAAgCd,oBAAS,GAAzC,mBAAOe,EAAP,KAAiBC,EAAjB,KAEMC,EAAYC,mBACZC,EAAYD,mBACZE,EAAUF,mBAEhBG,qBAAU,WACT,IAgBMC,EAAKC,aAhBS,WACnB,IAAMC,EAAO,IAAIC,KACjBf,EAASc,EAAKE,YACdd,EAAOY,EAAKG,UACZb,EAAQU,EAAKI,WACb,IAAMC,EAAQL,EAAKM,WACnB5B,EAAiB2B,EAAQ,IACzBzB,EAAWoB,EAAKO,cAChBzB,EAAWkB,EAAKQ,cAChBxB,EAAQqB,GAAS,GAAK,KAAO,MAE7BT,EAAQa,QAAQC,MAAMC,UAAtB,wCAAmEC,EAAMnC,EAAe,EAAG,GAAI,EAAG,KAAlG,QACAgB,EAAUgB,QAAQC,MAAMC,UAAxB,wCAAqEC,EAAMjC,EAAS,EAAG,GAAI,EAAG,KAA9F,QACAgB,EAAUc,QAAQC,MAAMC,UAAxB,wCAAqEC,EAAM/B,EAAS,EAAG,GAAI,EAAG,KAA9F,UAGmC,KACpC,OAAO,kBAAMgC,cAAcf,MACzB,CAACrB,EAAeI,EAASF,IAE5B,IAAMiC,EAAQ,SAACE,EAAKC,EAAQC,EAAQC,EAASC,GAC5C,OAAQJ,EAAMC,IAAWG,EAAUD,IAAYD,EAASD,GAAUE,GAiBnE,OACC,sBAAKE,UAAS,eAAU5B,EAAW,OAAS,IAA5C,UACC,wBAAQ4B,UAAS,iBAAY5B,EAAW,OAAS,IAAM6B,QAhBlC,SAACC,GAEvB7B,GAAY,SAAAD,GAAQ,OAAKA,KACrBA,GACH+B,SAASC,KAAKb,MAAMc,gBAAkB,OACtCF,SAASC,KAAKb,MAAMe,MAAQ,SAG5BH,SAASC,KAAKb,MAAMc,gBAAkB,OACtCF,SAASC,KAAKb,MAAMe,MAAQ,SAO5B,mBAAoFlC,EAAW,aAAe,eAC9G,sBAAK4B,UAAU,kBAAf,UACC,sBAAKA,UAAU,QAAf,UACC,qBAAKA,UAAS,sBAAiB5B,EAAW,OAAS,IAAMmC,IAAK9B,IAC9D,qBAAKuB,UAAS,wBAAmB5B,EAAW,OAAS,IAAMmC,IAAKjC,IAChE,qBAAK0B,UAAS,wBAAmB5B,EAAW,OAAS,IAAMmC,IAAK/B,IAChE,qBAAKwB,UAAS,uBAAkB5B,EAAW,OAAS,SAGrD,sBAAK4B,UAAU,OAAf,UAAuB1C,EAAvB,IAAuCE,EAAU,GAAV,WAAmBA,GAAYA,EAAtE,IAAgFI,KAChF,sBAAKoC,UAAS,eAAU5B,EAAW,OAAS,IAA5C,UAAmDlB,EAAKc,GAAxD,KAAgEb,EAAOW,GAAvE,IAA+E,sBAAMkC,UAAS,iBAAY5B,EAAW,OAAS,IAA/C,SAAsDF,cCtEzIsC,IAASC,OAAO,cAAC,EAAD,IAASN,SAASO,cAAc,W","file":"static/js/main.69023747.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\n\nconst days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\nconst months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n\nconst App = () => {\n\n\tconst [hoursForClock, setHoursForClock] = useState('12')\n\tconst [minutes, setMinutes] = useState('0')\n\tconst [seconds, setSeconds] = useState('0')\n\tconst [ampm, setAmPm] = useState('am')\n\tconst [month, setMonth] = useState('6')\n\tconst [day, setDay] = useState('2')\n\tconst [date, setDate] = useState('1')\n\tconst [darkmode, setDarkMode] = useState(false)\n\n\tconst minuteRef = useRef()\n\tconst secondRef = useRef()\n\tconst hourRef = useRef()\n\n\tuseEffect(() => {\n\t\tconst initSetTime = () => {\n\t\t\tconst time = new Date();\n\t\t\tsetMonth(time.getMonth());\n\t\t\tsetDay(time.getDay());\n\t\t\tsetDate(time.getDate());\n\t\t\tconst hours = time.getHours();\n\t\t\tsetHoursForClock(hours % 12);\n\t\t\tsetMinutes(time.getMinutes());\n\t\t\tsetSeconds(time.getSeconds());\n\t\t\tsetAmPm(hours >= 12 ? 'PM' : 'AM');\n\n\t\t\thourRef.current.style.transform = `translate(-50%, -100%) rotate(${scale(hoursForClock, 0, 11, 0, 360)}deg)`\n\t\t\tminuteRef.current.style.transform = `translate(-50%, -100%) rotate(${scale(minutes, 0, 59, 0, 360)}deg)`\n\t\t\tsecondRef.current.style.transform = `translate(-50%, -100%) rotate(${scale(seconds, 0, 59, 0, 360)}deg)`\n\t\t}\n\n\t\tconst id = setInterval(initSetTime, 1000);\n\t\treturn () => clearInterval(id)\n\t}, [hoursForClock, seconds, minutes])\n\n\tconst scale = (num, in_min, in_max, out_min, out_max) => {\n\t\treturn (num - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n\t}\n\n\tconst onClickHandler = (e) => {\n\n\t\tsetDarkMode(darkmode => !darkmode)\n\t\tif (darkmode) {\n\t\t\tdocument.body.style.backgroundColor = '#fff'\n\t\t\tdocument.body.style.color = '#111'\n\t\t}\n\t\telse {\n\t\t\tdocument.body.style.backgroundColor = '#111'\n\t\t\tdocument.body.style.color = '#fff'\n\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className={`mode ${darkmode ? 'dark' : ''}`}>\n\t\t\t<button className={`toggle ${darkmode ? 'dark' : ''}`} onClick={onClickHandler}>{`${darkmode ? 'Light mode' : 'Dark mode'}`}</button>\n\t\t\t<div className=\"clock-container\">\n\t\t\t\t<div className=\"clock\">\n\t\t\t\t\t<div className={`needle hour ${darkmode ? 'dark' : ''}`} ref={hourRef}></div>\n\t\t\t\t\t<div className={`needle minute ${darkmode ? 'dark' : ''}`} ref={minuteRef}></div>\n\t\t\t\t\t<div className={`needle second ${darkmode ? 'dark' : ''}`} ref={secondRef}></div>\n\t\t\t\t\t<div className={`center-point ${darkmode ? 'dark' : ''}`}></div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"time\">{hoursForClock}:{minutes < 10 ? `0${minutes}` : minutes} {ampm}</div>\n\t\t\t\t<div className={`date ${darkmode ? 'dark' : ''}`}>{days[day]}, {months[month]} <span className={`circle ${darkmode ? 'dark' : ''}`}>{date}</span></div>\n\t\t\t</div>\n\t\t</div >\n\t);\n};\n\nexport default App;\n","import ReactDom from 'react-dom';\nimport App from './App';\n\nReactDom.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}