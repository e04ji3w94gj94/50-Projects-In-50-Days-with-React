{"version":3,"sources":["App.js","index.js"],"names":["App","useState","currentActive","setCurrentActive","prevButton","setPrevButton","nextButton","setNextButton","stepCount","progressRef","useRef","useEffect","current","style","width","className","id","ref","Array","keys","slice","map","step","onClick","disabled","ReactDom","render","document","querySelector"],"mappings":"mNA6EeA,EA1EH,WACX,MAA0CC,mBAAS,GAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAoBN,mBAAS,GAAtBO,EAAP,oBACMC,EAAcC,iBAAO,MAE3BC,qBAAU,WACTF,EAAYG,QAAQC,MAAMC,MAA1B,WACGZ,EAAgB,IAAMM,EAAY,GAAM,IAD3C,KAIsB,IAAlBN,EACHG,GAAc,GACJH,IAAkBM,EAC5BD,GAAc,IAEdF,GAAc,GACdE,GAAc,MAEb,CAACL,EAAeM,IAkBnB,OACC,sBAAKO,UAAU,YAAf,UACC,sBAAKA,UAAU,qBAAf,UACC,qBAAKA,UAAU,WAAWC,GAAG,WAAWC,IAAKR,IAC5C,YAAIS,MAAMV,EAAY,GAAGW,QAAQC,MAAM,GAAGC,KAAI,SAACC,GAC/C,OACC,qBAECP,UAAS,iBAAYO,GAAQpB,EAAgB,SAAW,IAFzD,SAIEoB,GAHIA,SAST,wBACCP,UAAU,MACVC,GAAG,OACHO,QAnCiB,WACnBpB,GAAiB,SAACD,GAAD,OAAmBA,EAAgB,KAEhDA,EAAgB,GACnBC,EAAiB,IAgChBqB,SAAUpB,EAJX,kBAQA,wBACCW,UAAU,MACVC,GAAG,OACHO,QAnCiB,WACnBpB,GAAiB,SAACD,GAAD,OAAmBA,EAAgB,KAEhDA,EAAgBM,GACnBL,EAAiBK,IAgChBgB,SAAUlB,EAJX,sBC9DHmB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,cAAc,Y","file":"static/js/main.674f0397.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\n\nconst App = () => {\n\tconst [currentActive, setCurrentActive] = useState(1);\n\tconst [prevButton, setPrevButton] = useState(true);\n\tconst [nextButton, setNextButton] = useState(false);\n\tconst [stepCount] = useState(4);\n\tconst progressRef = useRef(null);\n\n\tuseEffect(() => {\n\t\tprogressRef.current.style.width = `${\n\t\t\t((currentActive - 1) / (stepCount - 1)) * 100\n\t\t}%`;\n\n\t\tif (currentActive === 1) {\n\t\t\tsetPrevButton(true);\n\t\t} else if (currentActive === stepCount) {\n\t\t\tsetNextButton(true);\n\t\t} else {\n\t\t\tsetPrevButton(false);\n\t\t\tsetNextButton(false);\n\t\t}\n\t}, [currentActive, stepCount]);\n\n\tconst prevHandler = () => {\n\t\tsetCurrentActive((currentActive) => currentActive - 1);\n\n\t\tif (currentActive < 1) {\n\t\t\tsetCurrentActive(1);\n\t\t}\n\t};\n\n\tconst nextHandler = () => {\n\t\tsetCurrentActive((currentActive) => currentActive + 1);\n\n\t\tif (currentActive > stepCount) {\n\t\t\tsetCurrentActive(stepCount);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className='container'>\n\t\t\t<div className='progress-container'>\n\t\t\t\t<div className='progress' id='progress' ref={progressRef}></div>\n\t\t\t\t{[...Array(stepCount + 1).keys()].slice(1).map((step) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tkey={step}\n\t\t\t\t\t\t\tclassName={`circle ${step <= currentActive ? 'active' : ''}`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{step}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\n\t\t\t<button\n\t\t\t\tclassName='btn'\n\t\t\t\tid='prev'\n\t\t\t\tonClick={prevHandler}\n\t\t\t\tdisabled={prevButton}\n\t\t\t>\n\t\t\t\tPrev\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tclassName='btn'\n\t\t\t\tid='next'\n\t\t\t\tonClick={nextHandler}\n\t\t\t\tdisabled={nextButton}\n\t\t\t>\n\t\t\t\tNext\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import ReactDom from 'react-dom'\nimport App from './App'\n\nReactDom.render(\n  <App/>,\n  document.querySelector('#root')\n)"],"sourceRoot":""}