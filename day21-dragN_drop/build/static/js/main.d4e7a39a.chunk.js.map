{"version":3,"sources":["App.js","index.js"],"names":["App","useState","emptys","fill","setFill","hold","setHold","invisible","setInvisible","hovered","setHovered","onDragStartHandler","setTimeout","onDragEndHandler","onDragOverHandler","e","preventDefault","onDropHandler","className","Array","keys","map","empty","idx","onDragOver","onDragEnter","Number","onDragEnterHandler","draggable","onDragStart","onDragEnd","onDrop","ReactDom","render","document","querySelector"],"mappings":"+MAoEeA,EAhEH,WAEX,MAAiBC,mBAAS,GAAnBC,EAAP,oBACA,EAAwBD,mBAAS,GAAjC,mBAAOE,EAAP,KAAaC,EAAb,KACA,EAAwBH,oBAAS,GAAjC,mBAAOI,EAAP,KAAaC,EAAb,KACA,EAAkCL,oBAAS,GAA3C,mBAAOM,EAAP,KAAkBC,EAAlB,KACA,EAA8BP,oBAAS,GAAvC,mBAAOQ,EAAP,KAAgBC,EAAhB,KAEMC,EAAqB,WAC1BL,GAAQ,GACRM,YAAW,kBAAMJ,GAAa,KAAO,IAGhCK,EAAmB,WACxBP,GAAQ,GACRE,GAAa,GACbE,GAAW,IAINI,EAAoB,SAACC,GAC1BA,EAAEC,kBAWGC,EAAgB,WACrBP,GAAW,GACXJ,GAAQ,IAIT,OACC,qBAAKY,UAAU,OAAf,SAEE,YAAIC,MAAMjB,GAAQkB,QAAQC,KAAI,SAACC,EAAOC,GACrC,OACC,qBACCL,UAAS,gBAAWf,IAASoB,GAAOd,EAAU,UAAY,IAC1De,WAAYV,EACZW,YAAa,SAACV,GAAD,OAtBQ,SAACA,EAAGQ,GAC9BR,EAAEC,iBACFZ,EAAQsB,OAAOH,IACfb,GAAW,GACXF,GAAa,GAkBYmB,CAAmBZ,EAAGQ,IAH3C,SAMEpB,IAASoB,GACT,qBAAKL,UAAS,UAAKX,EAAY,YAAH,eAAyBF,EAAO,OAAS,KAAQuB,WAAS,EACrFC,YAAalB,EACbmB,UAAWjB,EACXkB,OAAQd,KAVDM,SC5ChBS,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.d4e7a39a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\n\nconst App = () => {\n\n\tconst [emptys] = useState(5)\n\tconst [fill, setFill] = useState(0)\n\tconst [hold, setHold] = useState(false)\n\tconst [invisible, setInvisible] = useState(false)\n\tconst [hovered, setHovered] = useState(false)\n\n\tconst onDragStartHandler = () => {\n\t\tsetHold(true)\n\t\tsetTimeout(() => setInvisible(true), 0);\n\t}\n\n\tconst onDragEndHandler = () => {\n\t\tsetHold(false)\n\t\tsetInvisible(false)\n\t\tsetHovered(false)\n\n\t}\n\n\tconst onDragOverHandler = (e) => {\n\t\te.preventDefault();\n\t}\n\n\tconst onDragEnterHandler = (e, idx) => {\n\t\te.preventDefault();\n\t\tsetFill(Number(idx))\n\t\tsetHovered(true)\n\t\tsetInvisible(false)\n\t}\n\n\n\tconst onDropHandler = () => {\n\t\tsetHovered(false)\n\t\tsetHold(false)\n\t}\n\n\n\treturn (\n\t\t<div className='wrap'>\n\t\t\t{\n\t\t\t\t[...Array(emptys).keys()].map((empty, idx) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div key={idx}\n\t\t\t\t\t\t\tclassName={`empty ${fill === idx && hovered ? 'hovered' : ''}`}\n\t\t\t\t\t\t\tonDragOver={onDragOverHandler}\n\t\t\t\t\t\t\tonDragEnter={(e) => onDragEnterHandler(e, idx)}\n\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{fill === idx &&\n\t\t\t\t\t\t\t\t<div className={`${invisible ? 'invisible' : `fill ${hold ? 'hold' : ''}`}`} draggable\n\t\t\t\t\t\t\t\t\tonDragStart={onDragStartHandler}\n\t\t\t\t\t\t\t\t\tonDragEnd={onDragEndHandler}\n\t\t\t\t\t\t\t\t\tonDrop={onDropHandler}\n\t\t\t\t\t\t\t\t></div>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t}\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import ReactDom from 'react-dom';\nimport App from './App';\n\nReactDom.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}