{"version":3,"sources":["App.js","index.js"],"names":["App","useState","result","setResult","pwdLength","setPwdLength","hasLower","setHasLower","hasUpper","setHasUpper","hasNumber","setHasNumber","hasSymbol","setHasSymbol","onChangeHandler","e","value","changeFunc","length","lowercase","uppercase","numbers","symbols","target","id","generatePassword","lower","upper","number","symbol","typesCount","typesArr","filter","item","Object","values","i","forEach","type","funcName","keys","randomFunc","slice","String","fromCharCode","Math","floor","random","className","onClick","textarea","document","createElement","password","body","appendChild","select","execCommand","remove","alert","min","max","onChange","checked","ReactDom","render","querySelector"],"mappings":"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","file":"static/js/main.211c97d2.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\n\n\n\nconst App = () => {\n\tconst [result, setResult] = useState('')\n\tconst [pwdLength, setPwdLength] = useState(20)\n\tconst [hasLower, setHasLower] = useState(true)\n\tconst [hasUpper, setHasUpper] = useState(true)\n\tconst [hasNumber, setHasNumber] = useState(true)\n\tconst [hasSymbol, setHasSymbol] = useState(true)\n\n\tconst onChangeHandler = (e, value) => {\n\n\t\tconst changeFunc = {\n\t\t\tlength: setPwdLength,\n\t\t\tlowercase: setHasLower,\n\t\t\tuppercase: setHasUpper,\n\t\t\tnumbers: setHasNumber,\n\t\t\tsymbols: setHasSymbol\n\t\t}\n\t\tif (e.target.id === 'length')\n\t\t\tchangeFunc[e.target.id](e.target.value)\n\t\telse\n\t\t\tchangeFunc[e.target.id]((value) => !value)\n\t}\n\n\tconst onGenerateHandler = () => {\n\t\tsetResult(generatePassword(hasLower, hasUpper, hasNumber, hasSymbol, pwdLength))\n\t}\n\n\tconst onClipboardHandler = () => {\n\n\t\tconst textarea = document.createElement('textarea');\n\t\tconst password = result;\n\n\t\tif (!password) {\n\t\t\treturn\n\t\t}\n\n\t\ttextarea.value = password;\n\t\tdocument.body.appendChild(textarea);\n\t\ttextarea.select();\n\t\tdocument.execCommand('copy');\n\t\ttextarea.remove();\n\t\talert('Password copied to clipboard!');\n\t}\n\n\tconst generatePassword = (lower, upper, number, symbol, length) => {\n\t\tlet generatePassword = '';\n\t\tconst typesCount = lower + upper + number + symbol;\n\t\tconst typesArr = [{ lower }, { upper }, { number }, { symbol }].filter(item => Object.values(item)[0]);\n\n\t\tif (typesCount === 0) {\n\t\t\treturn ''\n\t\t}\n\n\t\tfor (let i = 0; i < length; i += typesCount) {\n\t\t\ttypesArr.forEach(type => {\n\t\t\t\tconst funcName = Object.keys(type)[0];\n\t\t\t\tgeneratePassword += randomFunc[funcName]();\n\t\t\t})\n\t\t}\n\n\t\tconst finalPassword = generatePassword.slice(0, length);\n\n\t\treturn finalPassword\n\n\t}\n\n\tconst getRandomLower = () => {\n\t\treturn String.fromCharCode(Math.floor(Math.random() * 26) + 97);\n\t}\n\n\tconst getRandomUpper = () => {\n\t\treturn String.fromCharCode(Math.floor(Math.random() * 26) + 65);\n\t}\n\n\tconst getRandomNumber = () => {\n\t\treturn String.fromCharCode(Math.floor(Math.random() * 10) + 48);\n\t}\n\n\tconst getRandomSymbol = () => {\n\t\tconst symbols = '!@#$%^&*(){}[]=<>/,.'\n\t\treturn symbols[Math.floor(Math.random() * symbols.length)]\n\t}\n\n\tconst randomFunc = {\n\t\tlower: getRandomLower,\n\t\tupper: getRandomUpper,\n\t\tnumber: getRandomNumber,\n\t\tsymbol: getRandomSymbol\n\t}\n\n\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<h2>Password Generator</h2>\n\t\t\t<div className=\"result-container\">\n\t\t\t\t<span>{result}</span>\n\t\t\t\t<button className=\"btn\" onClick={onClipboardHandler}>\n\t\t\t\t\t<i className=\"far fa-clipboard\"></i>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div className=\"settings\">\n\t\t\t\t<div className=\"setting\">\n\t\t\t\t\t<label>Password Length</label>\n\t\t\t\t\t<input type=\"number\" id=\"length\" min=\"4\" max=\"20\" value={pwdLength} onChange={(e) => onChangeHandler(e, pwdLength)} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"setting\">\n\t\t\t\t\t<label>Include uppercase letters</label>\n\t\t\t\t\t<input type=\"checkbox\" id=\"uppercase\" checked={hasUpper} onChange={onChangeHandler} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"setting\">\n\t\t\t\t\t<label>Include lowercase letters</label>\n\t\t\t\t\t<input type=\"checkbox\" id=\"lowercase\" checked={hasLower} onChange={onChangeHandler} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"setting\">\n\t\t\t\t\t<label>Include numbers</label>\n\t\t\t\t\t<input type=\"checkbox\" id=\"numbers\" checked={hasNumber} onChange={onChangeHandler} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"setting\">\n\t\t\t\t\t<label>Include symbols</label>\n\t\t\t\t\t<input type=\"checkbox\" id=\"symbols\" checked={hasSymbol} onChange={onChangeHandler} />\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<button className=\"btn btn-large\" onClick={onGenerateHandler}>Generate Password</button>\n\t\t</div>\n\t)\n};\n\nexport default App;\n","import ReactDom from 'react-dom';\nimport App from './App';\n\nReactDom.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}