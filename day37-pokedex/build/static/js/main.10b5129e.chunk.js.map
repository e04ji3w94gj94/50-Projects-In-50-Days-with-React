{"version":3,"sources":["App.js","index.js"],"names":["colors","fire","grass","electric","water","ground","rock","fairy","poison","bug","dragon","psychic","flying","fighting","normal","main_types","Object","keys","App","useState","pokemonCards","setPokemonCards","loading","setLoading","useEffect","fetchPokemons","a","i","getPokemon","id","url","axios","get","data","className","map","pokemonCard","idx","name","toUpperCase","slice","toString","padStart","poke_types","types","type","find","indexOf","color","style","backgroundColor","src","alt","ReactDom","render","document","querySelector"],"mappings":"mPAKMA,EAAS,CACdC,KAAM,UACNC,MAAO,UACPC,SAAU,UACVC,MAAO,UACPC,OAAQ,UACRC,KAAM,UACNC,MAAO,UACPC,OAAQ,UACRC,IAAK,UACLC,OAAQ,UACRC,QAAS,UACTC,OAAQ,UACRC,SAAU,UACVC,OAAQ,WAGHC,EAAaC,OAAOC,KAAKjB,GAyDhBkB,EAvDH,WAEX,MAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAoBA,OAlBAC,qBAAU,WAET,IAAMC,EAAa,uCAAG,4BAAAC,EAAA,sDACZC,EAAI,EADQ,YACLA,GA5BG,KA2BE,gCAEdC,EAAWD,GAFG,OACeA,IADf,0DAAH,qDAMbC,EAAU,uCAAG,WAAOC,GAAP,mBAAAH,EAAA,6DACZI,EADY,4CAC+BD,GAD/B,SAEKE,IAAMC,IAAIF,GAFf,gBAEVG,EAFU,EAEVA,KACRZ,GAAgB,SAACD,GAAD,4BAAsBA,GAAtB,CAAoCa,OACpDV,GAAW,GAJO,2CAAH,sDAOhBE,MACE,IAGF,sBAAKS,UAAU,YAAf,UACC,yCACA,qBAAKA,UAAU,iBAAf,UACGZ,GACDF,EAAae,KAAI,SAACC,EAAaC,GAE9B,IAAMC,EAAOF,EAAYE,KAAK,GAAGC,cAAgBH,EAAYE,KAAKE,MAAM,GAClEX,EAAKO,EAAYP,GAAGY,WAAWC,SAAS,EAAG,KAC3CC,EAAaP,EAAYQ,MAAMT,KAAI,SAAAU,GAAI,OAAIA,EAAKA,KAAKP,QACrDO,EAAO9B,EAAW+B,MAAK,SAAAD,GAAI,OAAIF,EAAWI,QAAQF,IAAS,KAC3DG,EAAQhD,EAAO6C,GAErB,OACC,sBAAeX,UAAU,UAAUe,MAAO,CAAEC,gBAAgB,GAAD,OAAKF,IAAhE,UACC,qBAAKd,UAAU,gBAAf,SACC,qBAAKiB,IAAG,wDAAmDf,EAAYP,GAA/D,QAAyEuB,IAAI,OAEtF,sBAAKlB,UAAU,OAAf,UACC,uBAAMA,UAAU,SAAhB,cAA2BL,KAC3B,oBAAIK,UAAU,OAAd,SAAsBI,IACtB,wBAAOJ,UAAU,OAAjB,mBAA8B,+BAAOW,IAArC,YAPQR,YC1DjBgB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.10b5129e.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nconst pokemon_count = 150;\nconst colors = {\n\tfire: '#FDDFDF',\n\tgrass: '#DEFDE0',\n\telectric: '#FCF7DE',\n\twater: '#DEF3FD',\n\tground: '#f4e7da',\n\trock: '#d5d5d4',\n\tfairy: '#fceaff',\n\tpoison: '#98d7a5',\n\tbug: '#f8d5a3',\n\tdragon: '#97b3e6',\n\tpsychic: '#eaeda1',\n\tflying: '#F5F5F5',\n\tfighting: '#E6E0D4',\n\tnormal: '#F5F5F5'\n};\n\nconst main_types = Object.keys(colors);\n\nconst App = () => {\n\n\tconst [pokemonCards, setPokemonCards] = useState([])\n\tconst [loading, setLoading] = useState(true)\n\n\tuseEffect(() => {\n\n\t\tconst fetchPokemons = async () => {\n\t\t\tfor (let i = 1; i <= pokemon_count; i++) {\n\t\t\t\tawait getPokemon(i)\n\t\t\t}\n\t\t};\n\n\t\tconst getPokemon = async (id) => {\n\t\t\tconst url = `https://pokeapi.co/api/v2/pokemon/${id}`\n\t\t\tconst { data } = await axios.get(url)\n\t\t\tsetPokemonCards((pokemonCards) => [...pokemonCards, data])\n\t\t\tsetLoading(false)\n\t\t};\n\n\t\tfetchPokemons()\n\t}, [])\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<h1>Pokedex</h1>\n\t\t\t<div className=\"poke-container\">\n\t\t\t\t{!loading &&\n\t\t\t\t\tpokemonCards.map((pokemonCard, idx) => {\n\n\t\t\t\t\t\tconst name = pokemonCard.name[0].toUpperCase() + pokemonCard.name.slice(1)\n\t\t\t\t\t\tconst id = pokemonCard.id.toString().padStart(3, '0')\n\t\t\t\t\t\tconst poke_types = pokemonCard.types.map(type => type.type.name)\n\t\t\t\t\t\tconst type = main_types.find(type => poke_types.indexOf(type) > -1)\n\t\t\t\t\t\tconst color = colors[type]\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div key={idx} className=\"pokemon\" style={{ backgroundColor: `${color}` }}>\n\t\t\t\t\t\t\t\t<div className=\"img-container\">\n\t\t\t\t\t\t\t\t\t<img src={`https://pokeres.bastionbot.org/images/pokemon/${pokemonCard.id}.png`} alt=\"\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"info\">\n\t\t\t\t\t\t\t\t\t<span className=\"number\">#{id}</span>\n\t\t\t\t\t\t\t\t\t<h3 className=\"name\">{name}</h3>\n\t\t\t\t\t\t\t\t\t<small className=\"type\">Type: <span>{type}</span> </small>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</div>\n\t\t</div>\n\t)\n};\n\nexport default App;\n","import ReactDom from 'react-dom';\nimport App from './App';\n\nReactDom.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}