{"version":3,"sources":["App.js","index.js"],"names":["App","useState","value","setValue","inputRef","useRef","labelRef","scale","num","in_min","in_max","out_min","out_max","className","type","id","min","max","onChange","e","target","range_width","getComputedStyle","current","getPropertyValue","label_width","num_range_width","substring","length","num_label_width","left","style","ref","htmlFor","ReactDom","render","document","querySelector"],"mappings":"oMA6CeA,EA1CH,WAEX,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAWC,mBACXC,EAAWD,mBAsBXE,EAAQ,SAACC,EAAKC,EAAQC,EAAQC,EAASC,GAC5C,OAAQJ,EAAMC,IAAWG,EAAUD,IAAYD,EAASD,GAAUE,GAInE,OACC,qCACC,qDACA,sBAAKE,UAAU,kBAAf,UACC,uBAAOC,KAAK,QAAQC,GAAG,QAAQC,IAAI,IAAIC,IAAI,MAAMf,MAAOA,EAAOgB,SA7B1C,SAACC,GAExB,IAAMjB,EAAQiB,EAAEC,OAAOlB,MAEjBmB,EAAcC,iBAAiBlB,EAASmB,SAASC,iBAAiB,SAClEC,EAAcH,iBAAiBhB,EAASiB,SAASC,iBAAiB,SAElEE,EAAkBL,EAAYM,UAAU,EAAGN,EAAYO,OAAS,GAChEC,EAAkBJ,EAAYE,UAAU,EAAGF,EAAYG,OAAS,GAEhEX,EAAME,EAAEC,OAAOH,IACfD,EAAMG,EAAEC,OAAOJ,IAEfc,EAAO5B,GAASwB,EAAkBT,GAAOY,EAAkB,EAAItB,EAAML,EAAOc,EAAKC,EAAK,IAAK,IAEjGX,EAASiB,QAAQQ,MAAMD,KAAvB,UAAiCA,EAAjC,MACA3B,EAASD,IAamF8B,IAAK5B,IAC/F,uBAAO6B,QAAQ,QAAQD,IAAK1B,EAA5B,SAAuCJ,WCpC3CgC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,W","file":"static/js/main.a0621ea8.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\nimport './App.css';\n\nconst App = () => {\n\n\tconst [value, setValue] = useState(50)\n\tconst inputRef = useRef()\n\tconst labelRef = useRef()\n\n\tconst onChangeHandler = (e) => {\n\n\t\tconst value = e.target.value;\n\n\t\tconst range_width = getComputedStyle(inputRef.current).getPropertyValue('width');\n\t\tconst label_width = getComputedStyle(labelRef.current).getPropertyValue('width');\n\n\t\tconst num_range_width = range_width.substring(0, range_width.length - 2);\n\t\tconst num_label_width = label_width.substring(0, label_width.length - 2);\n\n\t\tconst max = e.target.max;\n\t\tconst min = e.target.min;\n\n\t\tconst left = value * (num_range_width / max) - num_label_width / 2 + scale(value, min, max, 10, -10);\n\n\t\tlabelRef.current.style.left = `${left}px`;\n\t\tsetValue(value)\n\n\t}\n\n\tconst scale = (num, in_min, in_max, out_min, out_max) => {\n\t\treturn (num - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n\t}\n\n\n\treturn (\n\t\t<>\n\t\t\t<h2>Custom Range Slider</h2>\n\t\t\t<div className=\"range-container\">\n\t\t\t\t<input type=\"range\" id=\"range\" min=\"0\" max=\"100\" value={value} onChange={onChangeHandler} ref={inputRef} />\n\t\t\t\t<label htmlFor=\"range\" ref={labelRef}>{value}</label>\n\t\t\t</div>\n\t\t</>\n\t)\n};\n\nexport default App;\n","import ReactDom from 'react-dom';\nimport App from './App';\n\nReactDom.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}