{"version":3,"sources":["App.js","index.js"],"names":["App","useState","todos","setTodos","inputTodo","setInputTodo","useEffect","getTodos","JSON","parse","localStorage","getItem","setItem","stringify","onSubmit","e","preventDefault","todo","completed","type","className","placeholder","autoComplete","value","onChange","target","map","idx","onClick","id","newArray","onCompletedClickHandler","onContextMenu","newTodo","splice","onDeleteClickHandler","ReactDom","render","document","querySelector"],"mappings":"oNAiEeA,EA9DH,WAEX,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAGAC,qBAAU,WACT,IAAMC,EAAWC,KAAKC,MAAMC,aAAaC,QAAQ,UAC7CJ,GACHJ,EAASI,KAER,IAEHD,qBAAU,WACTI,aAAaE,QAAQ,QAASJ,KAAKK,UAAUX,MAC3C,CAACA,IA2BJ,OACC,qCACC,uCACA,uBAAMY,SA5BgB,SAACC,GACxBA,EAAEC,iBACFb,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAAEe,KAAMb,EAAWc,WAAW,MAClDb,EAAa,KAyBZ,UACC,uBAAOc,KAAK,OAAOC,UAAU,QAAQC,YAAY,kBAAkBC,aAAa,MAAMC,MAAOnB,EAAWoB,SAvBnF,SAACT,GACxBV,EAAaU,EAAEU,OAAOF,UAuBpB,oBAAIH,UAAU,QAAd,SAEElB,EAAMwB,KAAI,SAACT,EAAMU,GAAP,OAAe,oBAAcP,UAAS,UAAKlB,EAAMyB,GAAKT,UAAY,YAAc,IAAMU,QAAS,kBAtB9E,SAACC,GAChC,IAAMC,EAAQ,YAAO5B,GACrB4B,EAASD,GAAT,2BAAoBC,EAASD,IAA7B,IAAkCX,WAAYY,EAASD,GAAIX,YAC3Df,EAAS2B,GAmB0GC,CAAwBJ,IAAMK,cAAe,SAACjB,GAAD,OAhBpI,SAACA,EAAGc,GAChCd,EAAEC,iBACF,IAAMiB,EAAO,YAAO/B,GACpB+B,EAAQC,OAAOL,EAAI,GACnB1B,EAAS8B,GAY8JE,CAAqBpB,EAAGY,IAAlK,SAAyKV,EAAKA,MAArKU,WAIrC,oEAEC,uBAFD,oCCrDHS,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.a3614cdf.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nconst App = () => {\n\n\tconst [todos, setTodos] = useState([])\n\tconst [inputTodo, setInputTodo] = useState('')\n\t// const [completed, setCompleted] = useState([false])\n\n\tuseEffect(() => {\n\t\tconst getTodos = JSON.parse(localStorage.getItem('todos'));\n\t\tif (getTodos) {\n\t\t\tsetTodos(getTodos)\n\t\t}\n\t}, [])\n\n\tuseEffect(() => {\n\t\tlocalStorage.setItem('todos', JSON.stringify(todos));\n\t}, [todos])\n\n\tconst onSubmitHandler = (e) => {\n\t\te.preventDefault();\n\t\tsetTodos([...todos, { todo: inputTodo, completed: false }])\n\t\tsetInputTodo('')\n\t}\n\n\tconst onChangeHandler = (e) => {\n\t\tsetInputTodo(e.target.value)\n\t}\n\n\tconst onCompletedClickHandler = (id) => {\n\t\tconst newArray = [...todos]\n\t\tnewArray[id] = { ...newArray[id], completed: !newArray[id].completed }\n\t\tsetTodos(newArray)\n\t}\n\n\tconst onDeleteClickHandler = (e, id) => {\n\t\te.preventDefault();\n\t\tconst newTodo = [...todos]\n\t\tnewTodo.splice(id, 1)\n\t\tsetTodos(newTodo)\n\t}\n\n\n\n\treturn (\n\t\t<>\n\t\t\t<h1>todos</h1>\n\t\t\t<form onSubmit={onSubmitHandler}>\n\t\t\t\t<input type=\"text\" className=\"input\" placeholder=\"Enter your todo\" autoComplete=\"off\" value={inputTodo} onChange={onChangeHandler} />\n\t\t\t\t<ul className=\"todos\">\n\t\t\t\t\t{\n\t\t\t\t\t\ttodos.map((todo, idx) => <li key={idx} className={`${todos[idx].completed ? 'completed' : ''}`} onClick={() => onCompletedClickHandler(idx)} onContextMenu={(e) => onDeleteClickHandler(e, idx)}>{todo.todo}</li>)\n\t\t\t\t\t}\n\t\t\t\t</ul>\n\t\t\t</form>\n\t\t\t<small>\n\t\t\t\tLeft click to toggle completed.\n\t\t\t\t<br />\n\t\t\t\tRight click to delete todo\n\t\t\t</small>\n\t\t</>\n\t)\n};\n\nexport default App;\n","import ReactDom from 'react-dom';\nimport App from './App';\n\nReactDom.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}