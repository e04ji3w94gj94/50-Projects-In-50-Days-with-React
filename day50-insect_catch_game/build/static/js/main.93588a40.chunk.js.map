{"version":3,"sources":["App.js","index.js"],"names":["insectList","name","image","seconds","App","useState","screenUp","setScreenUp","selectInsect","setSelectInsect","createInsectList","setCreateInsectList","time","setTime","score","setScore","showMessage","setShowMessage","useEffect","createInsect","increaseTime","m","Math","floor","s","onSelectClickHandler","id","setInterval","width","window","innerWidth","height","innerHeight","x","random","y","getRandomLocation","div_style","top","left","img_style","transform","catchInsect","increaseScore","newArray","caught","setTimeout","className","onClick","map","insect","idx","src","alt","style","ReactDom","render","document","querySelector"],"mappings":"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","file":"static/js/main.93588a40.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nconst insectList = [\n\t{\n\t\tname: \"Fly\",\n\t\timage: \"http://pngimg.com/uploads/fly/fly_PNG3946.png\"\n\t},\n\t{\n\t\tname: \"Mosquito\",\n\t\timage: \"http://pngimg.com/uploads/mosquito/mosquito_PNG18175.png\"\n\t},\n\t{\n\t\tname: \"Spider\",\n\t\timage: \"http://pngimg.com/uploads/spider/spider_PNG12.png\"\n\t},\n\t{\n\t\tname: \"Roach\",\n\t\timage: \"http://pngimg.com/uploads/roach/roach_PNG12163.png\"\n\t},\n]\n\nlet seconds = 0;\n\nconst App = () => {\n\n\tconst [screenUp, setScreenUp] = useState()\n\tconst [selectInsect, setSelectInsect] = useState()\n\tconst [createInsectList, setCreateInsectList] = useState([])\n\tconst [time, setTime] = useState(\"Time: 00:00\")\n\tconst [score, setScore] = useState(0)\n\tconst [showMessage, setShowMessage] = useState(false)\n\n\tuseEffect(() => {\n\n\t\tif (screenUp === 1 && score === 0) createInsect()\n\t\tif (score > 19)\n\t\t\tsetShowMessage(true)\n\t\telse if (score > 0) {\n\n\t\t}\n\t}, [screenUp, score])\n\n\tconst onStartClickHandler = () => {\n\t\tsetScreenUp(0)\n\t}\n\n\tconst startGame = () => {\n\t\tsetInterval(increaseTime, 1000);\n\t}\n\n\tconst increaseTime = () => {\n\t\tlet m = Math.floor(seconds / 60);\n\t\tlet s = seconds % 60;\n\t\tm = m < 10 ? `0${m}` : m;\n\t\ts = s < 10 ? `0${s}` : s;\n\t\tsetTime(`Time: ${m}:${s}`);\n\t\tseconds++;\n\t}\n\n\tconst onSelectClickHandler = (id) => {\n\t\tsetSelectInsect(insectList[id])\n\t\tsetScreenUp(1)\n\t\tstartGame()\n\t}\n\n\tconst getRandomLocation = () => {\n\t\tconst width = window.innerWidth;\n\t\tconst height = window.innerHeight;\n\t\tconst x = Math.random() * (width - 200) + 100;\n\t\tconst y = Math.random() * (height - 200) + 100;\n\t\treturn { x, y }\n\t}\n\n\n\tconst createInsect = () => {\n\t\tconst { x, y } = getRandomLocation();\n\t\tsetCreateInsectList((createInsectList) => [...createInsectList, {\n\t\t\tname: selectInsect.name,\n\t\t\timage: selectInsect.image,\n\t\t\tdiv_style: { top: `${y}px`, left: `${x}px` },\n\t\t\timg_style: { transform: `rotate(${Math.random() * 360}deg)` }\n\t\t}])\n\t}\n\n\tconst addInsects = () => {\n\t\tsetTimeout(createInsect, 1000);\n\t\tsetTimeout(createInsect, 1500);\n\t}\n\n\tconst catchInsect = (id) => {\n\t\tincreaseScore();\n\t\tconst newArray = [...createInsectList]\n\t\tnewArray[id] = { ...newArray[id], caught: true }\n\t\tsetCreateInsectList(newArray)\n\t\taddInsects()\n\t}\n\n\tconst increaseScore = () => {\n\t\tsetScore(score + 1)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div className={`screen ${0 <= screenUp ? \"up\" : \"\"}`}>\n\t\t\t\t<h1>Catch The Insect</h1>\n\t\t\t\t<button className=\"btn\" onClick={onStartClickHandler}>Play Game</button>\n\t\t\t</div>\n\n\t\t\t<div className={`screen ${1 <= screenUp ? \"up\" : \"\"}`}>\n\t\t\t\t<h1>What is your \"favorite\" insect?</h1>\n\t\t\t\t<ul className=\"insects-list\">\n\t\t\t\t\t{\n\t\t\t\t\t\tinsectList.map((insect, idx) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<li key={idx}>\n\t\t\t\t\t\t\t\t\t<button className=\"choose-insect-btn\" onClick={() => onSelectClickHandler(idx)}>\n\t\t\t\t\t\t\t\t\t\t<p>{insect.name}</p>\n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\tsrc={insect.image}\n\t\t\t\t\t\t\t\t\t\t\talt={insect.name}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</ul>\n\t\t\t</div>\n\n\t\t\t<div className=\"screen game-container\">\n\t\t\t\t<h3 className=\"time\">{time}</h3>\n\t\t\t\t<h3 className=\"score\">Score: {score}</h3>\n\t\t\t\t<h5 className={`message ${showMessage ? \"visible\" : \"\"}`}>\n\t\t\t\t\tAre you annnoyed yet? <br />\n\t\t\t\t\tYou are playing an impossible game!!\n\t\t\t\t</h5>\n\t\t\t\t{\n\t\t\t\t\tcreateInsectList &&\n\t\t\t\t\tcreateInsectList.map((insect, idx) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div key={idx} className={`insect ${insect.caught ? \"caught\" : \"\"}`} style={insect.div_style} onClick={() => catchInsect(idx)}>\n\t\t\t\t\t\t\t\t<img src={insect.image} alt={insect.name} style={insect.img_style} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</div>\n\t\t</>\n\t)\n};\n\nexport default App;\n","import ReactDom from 'react-dom';\nimport App from './App';\n\nReactDom.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}