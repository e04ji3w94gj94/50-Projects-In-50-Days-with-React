{"version":3,"sources":["App.js","index.js"],"names":["App","useState","contentCount","showBox","setShowBox","boxRef","useRef","useEffect","showBoxHandler","triggerBottom","window","innerHeight","current","forEach","box","id","boxTop","getBoundingClientRect","top","addEventListener","removeEventListener","Array","keys","map","className","ref","el","ReactDom","render","document","querySelector"],"mappings":"uOAiDeA,EA9CH,WACX,MAAuBC,mBAAS,IAAzBC,EAAP,oBACA,EAA8BD,mBAAS,IAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KACMC,EAASC,iBAAO,IA2BtB,OAzBAC,qBAAU,WACT,IAAMC,EAAiB,WACtB,IAAMC,EAAiBC,OAAOC,YAAc,EAAK,EAEjD,YAAIN,EAAOO,SAASC,SAAQ,SAACC,EAAKC,GACjC,IAAMC,EAASF,EAAIG,wBAAwBC,IAG1Cd,EADGY,EAASP,EACD,SAACN,GACX,OAAO,2BAAKA,GAAZ,kBAAsBY,GAAK,KAGjB,SAACZ,GACX,OAAO,2BAAKA,GAAZ,kBAAsBY,GAAK,UAS/B,OAHAP,IACAE,OAAOS,iBAAiB,SAAUX,GAE3B,kBAAME,OAAOU,oBAAoB,SAAUZ,MAChD,IAGF,qCACC,6DACC,YAAIa,MAAMnB,GAAcoB,QAAQC,KAAI,SAACR,GAAD,OACpC,qBAECS,UAAS,cAASrB,EAAQY,GAAM,OAAS,IACzCU,IAAK,SAACC,GAAD,OAASrB,EAAOO,QAAQG,GAAMW,GAHpC,SAKC,0CAJKX,UCnCVY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,cAAc,Y","file":"static/js/main.0f65916b.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\n\nconst App = () => {\n\tconst [contentCount] = useState(13);\n\tconst [showBox, setShowBox] = useState({});\n\tconst boxRef = useRef([]);\n\n\tuseEffect(() => {\n\t\tconst showBoxHandler = () => {\n\t\t\tconst triggerBottom = (window.innerHeight / 5) * 4;\n\n\t\t\t[...boxRef.current].forEach((box, id) => {\n\t\t\t\tconst boxTop = box.getBoundingClientRect().top;\n\n\t\t\t\tif (boxTop < triggerBottom) {\n\t\t\t\t\tsetShowBox((showBox) => {\n\t\t\t\t\t\treturn { ...showBox, [id]: true };\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tsetShowBox((showBox) => {\n\t\t\t\t\t\treturn { ...showBox, [id]: false };\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tshowBoxHandler();\n\t\twindow.addEventListener('scroll', showBoxHandler);\n\n\t\treturn () => window.removeEventListener('scroll', showBoxHandler);\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<h1>Scroll to see the animation</h1>\n\t\t\t{[...Array(contentCount).keys()].map((id) => (\n\t\t\t\t<div\n\t\t\t\t\tkey={id}\n\t\t\t\t\tclassName={`box ${showBox[id] ? 'show' : ''}`}\n\t\t\t\t\tref={(el) => (boxRef.current[id] = el)}\n\t\t\t\t>\n\t\t\t\t\t<h2>Content</h2>\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</>\n\t);\n};\n\nexport default App;\n","import ReactDom from 'react-dom'\nimport App from './App'\n\nReactDom.render(\n  <App/>,\n  document.querySelector('#root')\n)"],"sourceRoot":""}